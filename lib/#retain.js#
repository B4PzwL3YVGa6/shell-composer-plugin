/*
 * Copyright 2017 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

const composer = require('../../openwhisk-composer'),
      {init} = require('./composer')

/**
 * Here is the await-app module entry point. Here we register command
 * handlers.
 *
 */
module.exports = (commandTree, prequire) => {
    const wsk = prequire('/ui/commands/openwhisk-core'),
          letc = function(_1, _2, _a, _3, fullCommand, execOptions, args, options) {
              args[args.indexOf('letc')] = 'let'
              return repl.qexec(`${fullCommand.replace('letc ', 'let ')}`, false, false, { dryRun: true }) // dryRun will give us back just the name and components
                  .then( ({name, components}) => {
                      const fsm = composer.sequence(...components),
                            serializedFSM = JSON.stringify(fsm).replace(/\s+/g,'')

                      return init()
                          .then(composerPackage => repl.qexec(`wsk package bind ${composerPackage.name} ${composerPackage.name}.${name} -p $run '${serializedFSM}'`))
                          .then(binding => repl.qfexec(`wsk action get /${binding.namespace}/${binding.name}/conductor`))
                  })
          }

    // Install the routes
    wsk.synonyms('actions').forEach(syn => {
        commandTree.listen(`/wsk/${syn}/forward`, retain, { docs: '' })
    })
}
